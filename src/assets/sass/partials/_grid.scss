@import './_variables.scss';

///////////////////////////////////////
///
/// TABLE OF CONTENTS
///
/// 1. FLEX CONTAINERS
/// 2. CONTAINERS
/// 3. VISIBILITY
/// 4. SPACING
///
///////////////////////////////////////


///////////////////////////////////////
/// 1. FLEX CONTAINERS
///////////////////////////////////////

.vs-flex {
  display: flex;
  box-sizing:border-box;
  flex: 1 1 auto;
}

.vs-flex-row {
  flex-direction: row;
  align-items:stretch;
  font-size:0;

  &.vs-align-center {
    justify-content: center;
    align-items: center;
  }
  &.vs-align-h-center {
    justify-content: center;
  }
  &.vs-align-h-left {
    justify-content: flex-start;
  }
  &.vs-align-h-right {
    justify-content: flex-end;
  }
  &.vs-align-v-center {
    align-items: center;
  }
  &.vs-align-v-top {
    align-items: flex-start;
  }
  &.vs-align-v-bottom {
    align-items: flex-end;
  }

  &.vs-reverse {
    flex-direction:row-reverse;
  }
}

.vs-flex-column {
  flex-direction: column;

  &.vs-align-center {
    justify-content: center;
    align-items: center;
  }
  &.vs-align-v-center {
    justify-content: center;
  }
  &.vs-align-v-top {
    justify-content: flex-start;
  }
  &.vs-align-v-bottom {
    justify-content: flex-end;
  }
  &.vs-align-h-center {
    align-items: center;
  }
  &.vs-align-h-left {
    align-items: flex-start;
  }
  &.vs-align-h-right {
    align-items: flex-end;
  }

  &.vs-reverse {
    flex-direction:column-reverse;
  }
}

.vs-flex-wrap {
  flex-wrap:wrap;
}

.vs-flex-wrap-xs-only {
  @include xSmallOnly {
    flex-wrap:wrap;
  }
}

.vs-flex-center {
  display:flex;
  flex-direction:column;
  justify-content:center;
  align-items:center;
}

.vs-flex-auto {
  flex:0 0 auto;
}

.vs-spacer {
  flex:1 1 auto;
}

.vs-grow {
  flex:1 1 100%;
  min-width:1px;
}

.vs-sq-btn-col {
  flex:0 0 50px;
}

///////////////////////////////////////
/// 2. CONTAINERS
///////////////////////////////////////

.vs-container {
  display:block;
  margin:0 auto;
  max-width:100%;
  padding-left:$gutterWidth / 3;
  padding-right:$gutterWidth / 3;

  @include small {
    max-width:100%;
  }

  @include medium {
    max-width:$medium;
    padding-left:$gutterWidth / 2;
    padding-right:$gutterWidth / 2;
  }

  @include large {
    max-width:$large;
  }

  @include xLarge {
    max-width:$xLarge;
  }

  &.vs-fluid {
    max-width:100%;
  }

  &.vs-lean {
    max-width:$large;
  }

  &.vs-narrow {
    max-width:47.5em;
  }
}

@for $i from 1 through 12 {
  .vs-xs-#{$i} {
    flex: 0 0 #{$i / 12 * 100%};
    max-width:#{$i / 12 * 100%};
  }
  .vs-xs-offset-#{$i} {
    margin-left:#{$i / 12 * 100%};
  }
}

@include small {
  @for $i from 1 through 12 {
    .vs-sm-#{$i} {
      flex: 0 0 #{$i / 12 * 100%};
      max-width:#{$i / 12 * 100%};
    }
    .vs-sm-offset-#{$i} {
      margin-left:#{$i / 12 * 100%};
    }
  }
}

@include medium {
  @for $i from 1 through 12 {
    .vs-md-#{$i} {
      flex: 0 0 #{$i / 12 * 100%};
      max-width:#{$i / 12 * 100%};
    }
    .vs-md-offset-#{$i} {
      margin-left:#{$i / 12 * 100%};
    }
  }
}

@include large {
  @for $i from 1 through 12 {
    .vs-lg-#{$i} {
      flex: 0 0 #{$i / 12 * 100%};
      max-width:#{$i / 12 * 100%};
    }
    .vs-lg-offset-#{$i} {
      margin-left:#{$i / 12 * 100%};
    }
  }
}

@include xLarge {
  @for $i from 1 through 12 {
    .xl-#{$i} {
      flex: 0 0 #{$i / 12 * 100%};
      max-width:#{$i / 12 * 100%};
    }
    .xl-offset-#{$i} {
      margin-left:#{$i / 12 * 100%};
    }
  }
}


///////////////////////////////////////
/// 3. VISIBILITY
///////////////////////////////////////

.vs-hide {
  display:none!important;
}

@include xSmallOnly{
  .vs-hide-xs-only,
  .vs-hide-xs-up,
  .vs-hide-sm-down,
  .vs-hide-md-down,
  .vs-hide-lg-down,
  .vs-hide-xl-down {
    display:none!important;
  }
}

@include smallOnly {
  .vs-hide-xs-up,
  .vs-hide-sm-up,
  .vs-hide-sm-only,
  .vs-hide-sm-down,
  .vs-hide-md-down,
  .vs-hide-lg-down,
  .vs-hide-xl-down {
    display:none!important;
  }
}

@include mediumOnly {
  .vs-hide-xs-up,
  .vs-hide-sm-up,
  .vs-hide-md-up,
  .vs-hide-md-only,
  .vs-hide-md-down,
  .vs-hide-lg-down,
  .vs-hide-xl-down {
    display:none!important;
  }
}

@include largeOnly {
  .vs-hide-xs-up,
  .vs-hide-sm-up,
  .vs-hide-md-up,
  .vs-hide-lg-up,
  .vs-hide-lg-only,
  .vs-hide-lg-down,
  .vs-hide-xl-down {
    display:none!important;
  }
}

@include xLarge {
  .hide-xs-up,
  .hide-sm-up,
  .hide-md-up,
  .hide-lg-up,
  .hide-xl-down,
  .hide-xl-only,
  .hide-xl-down {
    display:none!important;
  }
}

///////////////////////////////////////
/// 4. SPACING
///////////////////////////////////////

.vs-collapsed {
  padding:0!important;
}

.vs-collapsed-xs {
  @include xSmallOnly {
    padding:0!important;
  }
}

.vs-collapsed-h {
  padding-left:0!important;
  padding-right:0!important;
}

.vs-collapsed-v {
  padding-top:0!important;
  padding-bottom:0!important;
}

.vs-gutter {
  @include xSmallOnly {
    flex:0 0 $gutterWidth / 3;
    max-width:$gutterWidth / 3;
  }

  flex:0 0 $gutterWidth / 2;
  max-width:$gutterWidth / 2;
}

$numerators: 2 3 6 9 10;
@each $numerator in $numerators {
  // This operation loops through the $numerators collection above
  // Divides the numerator by 6
  // This gives is 5 ratios: 0.333, 0.5, 1, 1.5, 1.666
  // That ratio is then applied to the $gutterWidth variable to affect it

  $i: index($numerators, $numerator);
  $ratio: $numerator / 6;
  $spacing: $gutterWidth * $ratio;

  // Margin
  .vs-ma-#{$i}{
    margin:$spacing;
  }

  .vs-mv-#{$i} {
    margin-top:$spacing;
    margin-bottom:$spacing;
  }

  .vs-mh-#{$i} {
    margin-left:$spacing;
    margin-right:$spacing;
  }

  .vs-mt-#{$i}{
    margin-top:$spacing;
  }

  .vs-mb-#{$i}{
    margin-bottom:$spacing;
  }

  .vs-ml-#{$i}{
    margin-left:$spacing;
  }

  .vs-mr-#{$i}{
    margin-right:$spacing;
  }

  // Negative Margin
  .vs-nma-#{$i}{
    margin:-#{$spacing};
  }

  .vs-nmv-#{$i} {
    margin-top:-#{$spacing};
    margin-bottom:-#{$spacing};
  }

  .vs-nmh-#{$i} {
    margin-left:-#{$spacing};
    margin-right:-#{$spacing};
  }

  .vs-nmt-#{$i}{
    margin-top:-#{$spacing};
  }

  .vs-nmb-#{$i}{
    margin-bottom:-#{$spacing};
  }

  .vs-nml-#{$i}{
    margin-left:-#{$spacing};
  }

  .vs-nmr-#{$i}{
    margin-right:-#{$spacing};
  }

  // Padding
  .vs-pa-#{$i}{
    padding:$spacing;
  }

  .vs-pv-#{$i} {
    padding-top:$spacing;
    padding-bottom:$spacing;
  }

  .vs-ph-#{$i} {
    padding-left:$spacing;
    padding-right:$spacing;
  }

  .vs-pt-#{$i}{
    padding-top:$spacing;
  }

  .vs-pb-#{$i}{
    padding-bottom:$spacing;
  }

  .vs-pl-#{$i}{
    padding-left:$spacing;
  }

  .vs-pr-#{$i}{
    padding-right:$spacing;
  }
}

.vs-ma {
  margin:$gutterWidth / 3;

  @include medium {
    margin:$gutterWidth / 2;
  }
}

.vs-mh {
  margin-left:$gutterWidth / 3;
  margin-right:$gutterWidth / 3;

  @include medium {
    margin-left:$gutterWidth / 2;
    margin-right:$gutterWidth / 2;
  }
}

.vs-mv {
  margin-bottom:$gutterWidth / 3;
  margin-top:$gutterWidth / 3;

  @include medium {
    margin-bottom:$gutterWidth / 2;
    margin-top:$gutterWidth / 2;
  }
}

.vs-mt {
  margin-top:$gutterWidth / 3;

  @include medium {
    margin-top:$gutterWidth / 2;
  }
}

.vs-mb {
  margin-bottom:$gutterWidth / 3;

  @include medium {
    margin-bottom:$gutterWidth / 2;
  }
}

.vs-pa {
  padding:$gutterWidth / 3;

  @include medium {
    padding:$gutterWidth / 2;
  }
}

.vs-ph {
  padding-left:$gutterWidth / 3;
  padding-right:$gutterWidth / 3;

  @include medium {
    padding-left:$gutterWidth / 2;
    padding-right:$gutterWidth / 2;
  }
}

.vs-pv {
  padding-bottom:$gutterWidth / 3;
  padding-top:$gutterWidth / 3;

  @include medium {
    padding-bottom:$gutterWidth / 2;
    padding-top:$gutterWidth / 2;
  }
}

.vs-pt {
  padding-top:$gutterWidth / 3;

  @include medium {
    padding-top:$gutterWidth / 2;
  }
}

.vs-pr {
  padding-right:$gutterWidth / 3;

  @include medium {
    padding-right:$gutterWidth / 2;
  }
}

.vs-pl {
  padding-left:$gutterWidth / 3;

  @include medium {
    padding-left:$gutterWidth / 2;
  }
}

.vs-pb {
  padding-bottom:$gutterWidth / 3;

  @include medium {
    padding-bottom:$gutterWidth / 2;
  }
}

// CONDITIONAL PADDING/MARGIN
@include xSmallOnly {
  .vs-p-sm-up {
    padding:0!important;
  }
  .vs-m-sm-up {
    margin:0!important;
  }
  .vs-p-lg-only {
    padding:0!important;
  }
}

@include small {
  .vs-p-xs-only {
    padding:0!important;
  }
  .vs-m-xs-only {
    margin:0!important;
  }
}

@include medium {
  .vs-p-sm-down {
    margin:0!important;
  }
  .vs-m-sm-down {
    margin:0!important;
  }
}

@include smallOnly {
  .vs-p-lg-only {
    padding:0!important;
  }
  .vs-m-lg-only {
    margin:0!important;
  }
}

@include mediumOnly {
  .vs-p-lg-only {
    padding:0!important;
  }
  .vs-m-lg-only {
    margin:0!important;
  }
}


